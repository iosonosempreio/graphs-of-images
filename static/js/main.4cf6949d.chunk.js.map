{"version":3,"sources":["components/network/Network.js","App.js","reportWebVitals.js","index.js"],"names":["nodes","hashtags","missings","width","window","innerWidth","height","innerHeight","size","scaleLinear","app","PIXI","backgroundColor","resolution","devicePixelRatio","antialias","viewport","Viewport","passiveWheel","stopPropagation","screenWidth","screenHeight","worldWidth","worldHeight","interaction","renderer","plugins","drag","pressDrag","clampWheel","pinch","wheel","stage","addChild","container","x","screen","y","pivot","spritesheetsList","Array","from","i","forEach","d","loader","add","process","onProgress","e","console","log","progress","onComplete","a","resources","graphics","m","my_size","lineStyle","drawRect","l1_x1","l1_y1","l1_x2","l1_y2","moveTo","lineTo","l2_x1","l2_y1","l2_x2","l2_y2","closePath","h","style","fill","stroke","strokeThickness","lineJoin","text","label","anchor","alpha","s","sheet","spritesheet","textureName","texture","textures","sprite","nodeData","find","n","attributes","image","scale","Math","min","orig","Network","useRef","useEffect","json","then","data","filter","type","domain","extent","range","current","appendChild","view","load","ref","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cf6949d.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as PIXI from \"pixi.js\";\nimport { json, scaleLinear, extent } from \"d3\";\nimport { Viewport } from \"pixi-viewport\";\n\nconst width = window.innerWidth,\n  height = window.innerHeight,\n  size = scaleLinear();\nlet nodes, hashtags, missings;\n\nlet app = new PIXI.Application({\n  backgroundColor: 0xf1f1f1,\n  resolution: window.devicePixelRatio || 1,\n  width: width,\n  height: height,\n  antialias: true\n});\n\nconst viewport = new Viewport({\n  passiveWheel: false,\n  stopPropagation: true,\n  screenWidth: width,\n  screenHeight: height,\n  worldWidth: width,\n  worldHeight: height,\n  interaction: app.renderer.plugins.interaction, // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n});\nviewport.drag({ pressDrag: true, clampWheel: true }).pinch().wheel();\napp.stage.addChild(viewport);\n\nconst container = new PIXI.Container();\nviewport.addChild(container);\n\n// Move container to the center\ncontainer.x = app.screen.width / 2;\ncontainer.y = app.screen.height / 2;\n\n// Center bunny sprite in local container coordinates\ncontainer.pivot.x = container.width / 2;\ncontainer.pivot.y = container.height / 2;\n\nconst spritesheetsList = Array.from(\n  Array(15),\n  (x, i) => `images/spritesheets/spritesheet-${i + 1}.json`\n);\n\nspritesheetsList.forEach((d) => {\n  app.loader.add(process.env.PUBLIC_URL + d);\n});\napp.loader.onProgress.add((e) => {\n  console.log(e.progress + \"%\");\n});\n\napp.loader.onComplete.add(async () => {\n  console.log(\"loader completed\", app.loader.resources);\n\n  const graphics = new PIXI.Graphics();\n  missings.forEach(m=>{\n    const my_size = size(m.size);\n    graphics.lineStyle(1, 0x000000, 1);\n    // graphics.beginFill(0xDE3249);\n    graphics.drawRect(m.x - my_size/2, m.y - my_size/2, my_size, my_size);\n    const l1_x1 = m.x - my_size/2,\n          l1_y1 = m.y - my_size/2,\n          l1_x2 = m.x + my_size/2,\n          l1_y2 = m.y + my_size/2;\n    graphics.moveTo(l1_x1, l1_y1);\n    graphics.lineTo(l1_x2, l1_y2);\n    const l2_x1 = m.x + my_size/2,\n          l2_y1 = m.y - my_size/2,\n          l2_x2 = m.x - my_size/2,\n          l2_y2 = m.y + my_size/2;\n    graphics.moveTo(l2_x1, l2_y1);\n    graphics.lineTo(l2_x2, l2_y2);\n    graphics.closePath();\n    // graphics.endFill();\n  })\n  container.addChild(graphics);\n\n  hashtags.forEach((h) => {\n    let style = new PIXI.TextStyle({\n      \"fontSize\": h.size,\n      \"fontFamily\": \"Arial\",\n      // fontStyle: \"italic\",\n      // fontWeight: \"normal\",\n      fill:\"#333333\"\n    });\n    style = h.size > 50 ? {\n      ...style,\n      fill: [\"#ffffff\", \"#00ff99\"], // gradient\n      stroke: \"#4a1850\",\n      strokeThickness: 5,\n      // dropShadow: true,\n      // dropShadowColor: \"#000000\",\n      // dropShadowBlur: 4,\n      // dropShadowAngle: Math.PI / 6,\n      // dropShadowDistance: 6,\n      lineJoin: \"round\",\n    } : style;\n    const text = new PIXI.Text(h.label, style);\n    text.x = h.x;\n    text.y = h.y*-1;\n    text.anchor.x = 0.5;\n    text.alpha = h.size > 50 ? 1 : 0.5;\n    // text.anchor.y = 0.5;\n    container.addChild(text);\n  });\n\n  spritesheetsList.forEach((s) => {\n    const sheet = app.loader.resources[s].spritesheet;\n    for (let textureName in sheet.textures) {\n      // console.log(textureName)\n      const texture = sheet.textures[textureName];\n      const sprite = new PIXI.Sprite(texture);\n\n      const nodeData = nodes.find((n) => n.attributes.image === textureName);\n      let scale = 1;\n      if (nodeData) {\n        sprite.x = nodeData.x;\n        sprite.y = nodeData.y*-1;\n        scale = Math.min(\n          size(nodeData.size) / texture.orig.width,\n          size(nodeData.size) / texture.orig.height\n        );\n      } else {\n        sprite.x = 0;\n        sprite.y = 0;\n        scale = Math.min(\n          50 / texture.orig.width,\n          50 / texture.orig.height\n        );\n      }\n\n      sprite.anchor.x = 0.5;\n      sprite.anchor.y = 0.5;\n      sprite.scale.x = scale;\n      sprite.scale.y = scale;\n\n      container.addChild(sprite);\n    }\n  });\n});\n\nfunction Network() {\n  const container = useRef();\n  useEffect(() => {\n    json(process.env.PUBLIC_URL + \"data.json\").then((data) => {\n      nodes = data.nodes.filter((n) => n.attributes.type === \"post\");\n      hashtags = data.nodes.filter((n) => n.attributes.type === \"hashtag\");\n      missings = data.nodes.filter((n) => n.attributes.type === \"postNoImage\");\n      console.log(missings);\n      size.domain(extent(nodes, d=>d.size)).range([35,200])\n      container.current.appendChild(app.view);\n      app.loader.load();\n    });\n  }, []);\n\n  return <div ref={container}></div>;\n}\n\nexport default Network;\n","import Network from './components/network';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Network />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}